# pages/6_herramientas.py
import streamlit as st

st.set_page_config(page_title="Herramientas DWH", page_icon="üõ†Ô∏è", layout="wide")

st.markdown("<h1 style='text-align:center; color:#ffffff;'>üõ†Ô∏è Herramientas y Tecnolog√≠as</h1>", unsafe_allow_html=True)
st.markdown("<p style='text-align:center; font-size:16px; color:gray;'>Plataformas On-Premise y Cloud para Data Warehouses</p>", unsafe_allow_html=True)

st.divider()

# --- Introducci√≥n ---
st.subheader("üìù Panorama de Herramientas DWH")
st.write("""
El ecosistema de **Data Warehouse** incluye m√∫ltiples categor√≠as de herramientas:
almacenamiento, ETL/ELT, modelado, visualizaci√≥n y gobierno. Podemos clasificarlas
en soluciones **On-Premise** (locales) y **Cloud** (nube).
""")

st.divider()

# --- On-Premise vs Cloud ---
st.subheader("üè¢ On-Premise vs ‚òÅÔ∏è Cloud")

col1, col2 = st.columns(2)

with col1:
    st.info("""
    ### üè¢ On-Premise (Local)
    
    **Caracter√≠sticas:**
    - Infraestructura propia
    - Control total sobre hardware y software
    - Instalaci√≥n en servidores propios
    
    **Ventajas:**
    - ‚úÖ Control total de la infraestructura
    - ‚úÖ Cumplimiento regulatorio estricto
    - ‚úÖ Sin dependencia de internet
    - ‚úÖ Costos predecibles a largo plazo
    
    **Desventajas:**
    - ‚ùå Alta inversi√≥n inicial (CAPEX)
    - ‚ùå Mantenimiento y actualizaciones manuales
    - ‚ùå Escalabilidad limitada
    - ‚ùå Requiere equipo t√©cnico dedicado
    """)

with col2:
    st.success("""
    ### ‚òÅÔ∏è Cloud (Nube)
    
    **Caracter√≠sticas:**
    - Infraestructura gestionada por proveedor
    - Acceso via internet
    - Modelo de pago por uso
    
    **Ventajas:**
    - ‚úÖ Sin inversi√≥n inicial (OPEX)
    - ‚úÖ Escalabilidad el√°stica
    - ‚úÖ Actualizaciones autom√°ticas
    - ‚úÖ Alta disponibilidad y disaster recovery
    - ‚úÖ Despliegue r√°pido
    
    **Desventajas:**
    - ‚ùå Dependencia de conexi√≥n a internet
    - ‚ùå Costos variables
    - ‚ùå Menor control sobre infraestructura
    - ‚ùå Posibles preocupaciones de seguridad
    """)

st.divider()

# --- Bases de Datos DWH ---
st.subheader("üóÑÔ∏è Bases de Datos para Data Warehousing")

tab1, tab2 = st.tabs(["üè¢ On-Premise", "‚òÅÔ∏è Cloud"])

with tab1:
    st.markdown("""
    ### Soluciones On-Premise Populares
    """)
    
    with st.expander("üî∑ Oracle Database & Exadata"):
        col1, col2 = st.columns([2, 1])
        with col1:
            st.markdown("""
            **Oracle Database** con **Exadata** es una soluci√≥n empresarial completa.
            
            **Caracter√≠sticas:**
            - Motor de BD relacional robusto
            - Exadata: appliance optimizado para DWH
            - Compresi√≥n avanzada (Hybrid Columnar Compression)
            - Particionamiento inteligente
            - In-Memory Column Store
            
            **Casos de uso:**
            - Empresas grandes con infraestructura Oracle
            - Cargas de trabajo mixtas (OLTP + OLAP)
            - Requisitos de m√°ximo rendimiento
            """)
        with col2:
            st.metric("Tipo", "Relacional")
            st.metric("Licencia", "Comercial $$$")
            st.metric("Escalabilidad", "Alta")
    
    with st.expander("üî∑ Microsoft SQL Server"):
        col1, col2 = st.columns([2, 1])
        with col1:
            st.markdown("""
            **SQL Server** es la soluci√≥n DWH de Microsoft.
            
            **Caracter√≠sticas:**
            - Integration Services (SSIS) para ETL
            - Analysis Services (SSAS) para OLAP
            - Reporting Services (SSRS) para reportes
            - Columnstore indexes para DWH
            - Integraci√≥n con ecosistema Microsoft
            
            **Casos de uso:**
            - Entornos Windows/.NET
            - Integraci√≥n con Power BI
            - SMB a Enterprise
            """)
        with col2:
            st.metric("Tipo", "Relacional")
            st.metric("Licencia", "Comercial $$")
            st.metric("Escalabilidad", "Media-Alta")
    
    with st.expander("üî∑ IBM Db2 Warehouse"):
        st.markdown("""
        **IBM Db2** con extensiones de warehousing.
        
        **Caracter√≠sticas:**
        - BLU Acceleration (columnar)
        - Compresi√≥n adaptativa
        - Workload management avanzado
        - Integraci√≥n con IBM Cloud Pak
        
        **Casos de uso:**
        - Empresas con infraestructura IBM
        - Mainframe integration
        - Entornos h√≠bridos
        """)
    
    with st.expander("üî∂ Teradata"):
        st.markdown("""
        **Teradata** - Pionero en DWH empresarial.
        
        **Caracter√≠sticas:**
        - Arquitectura MPP (Massively Parallel Processing)
        - Optimizado para consultas complejas
        - Gesti√≥n autom√°tica de datos
        - Escalabilidad masiva
        
        **Casos de uso:**
        - Enterprise DWH de gran escala
        - Telecomunicaciones, banca, retail
        - Petabytes de datos
        
        üí∞ **Nota:** Muy costoso, perdiendo mercado frente a cloud
        """)
    
    with st.expander("üü¢ PostgreSQL + Greenplum"):
        st.markdown("""
        **PostgreSQL** con **Greenplum** para an√°lisis masivo.
        
        **Caracter√≠sticas:**
        - Open source y gratuito
        - Greenplum: MPP sobre PostgreSQL
        - Compatible con herramientas SQL est√°ndar
        - Comunidad activa
        
        **Casos de uso:**
        - Empresas que buscan alternativa open source
        - Presupuestos limitados
        - Flexibilidad y personalizaci√≥n
        """)

with tab2:
    st.markdown("""
    ### Soluciones Cloud Populares
    """)
    
    with st.expander("‚òÅÔ∏è Amazon Redshift"):
        col1, col2 = st.columns([2, 1])
        with col1:
            st.markdown("""
            **Amazon Redshift** - Servicio DWH de AWS.
            
            **Caracter√≠sticas:**
            - Almacenamiento columnar
            - Compresi√≥n autom√°tica
            - Distribuci√≥n de datos (DIST KEYS)
            - Integraci√≥n con S3, Glue, QuickSight
            - Redshift Spectrum (consultas en S3)
            - Concurrency Scaling autom√°tico
            
            **Pricing:**
            - Pago por nodo/hora
            - Serverless disponible
            
            **Casos de uso:**
            - Empresas en ecosistema AWS
            - Data Lakes en S3
            - An√°lisis de petabytes
            """)
        with col2:
            st.metric("Proveedor", "AWS")
            st.metric("Pricing", "Node-based")
            st.metric("‚≠ê Rating", "4.5/5")
    
    with st.expander("‚òÅÔ∏è Google BigQuery"):
        col1, col2 = st.columns([2, 1])
        with col1:
            st.markdown("""
            **Google BigQuery** - DWH serverless de Google.
            
            **Caracter√≠sticas:**
            - **Serverless** (sin gesti√≥n de infraestructura)
            - Almacenamiento columnar (Capacitor)
            - Escalado autom√°tico masivo
            - Consultas en segundos sobre TB/PB
            - ML integrado (BigQuery ML)
            - Separaci√≥n de compute y storage
            - Streaming insert en tiempo real
            
            **Pricing:**
            - Pago por consulta ($ por TB procesado)
            - Flat-rate para uso predecible
            
            **Casos de uso:**
            - Startups y empresas cloud-native
            - An√°lisis ad-hoc masivo
            - ML sobre datos warehouse
            """)
        with col2:
            st.metric("Proveedor", "Google Cloud")
            st.metric("Pricing", "Por consulta")
            st.metric("‚≠ê Rating", "4.7/5")
    
    with st.expander("‚òÅÔ∏è Snowflake"):
        col1, col2 = st.columns([2, 1])
        with col1:
            st.markdown("""
            **Snowflake** - DWH cloud-native multi-cloud.
            
            **Caracter√≠sticas:**
            - **Multi-cloud** (AWS, Azure, GCP)
            - Separaci√≥n total compute/storage
            - Virtual Warehouses independientes
            - Zero-copy cloning
            - Time Travel (acceso a datos hist√≥ricos)
            - Data Sharing entre cuentas
            - Escalado instant√°neo
            
            **Pricing:**
            - Storage: $ por TB/mes
            - Compute: $ por segundo de uso (cr√©ditos)
            
            **Casos de uso:**
            - Empresas multi-cloud
            - Data sharing entre organizaciones
            - Workloads con demanda variable
            """)
        with col2:
            st.metric("Proveedor", "Multi-cloud")
            st.metric("Pricing", "Compute+Storage")
            st.metric("‚≠ê Rating", "4.8/5")
    
    with st.expander("‚òÅÔ∏è Azure Synapse Analytics"):
        st.markdown("""
        **Azure Synapse Analytics** - Plataforma DWH unificada de Microsoft.
        
        **Caracter√≠sticas:**
        - Unifica DWH y Big Data analytics
        - Pools SQL dedicados y serverless
        - Integraci√≥n con Power BI
        - Spark integrado para big data
        - Data Explorer para series temporales
        - Pipelines (similar a ADF)
        
        **Pricing:**
        - DWU (Data Warehouse Units)
        - Pay-as-you-go o reservado
        
        **Casos de uso:**
        - Empresas en ecosistema Microsoft
        - An√°lisis unificado SQL + Spark
        - Integraci√≥n con Office 365
        """)
    
    with st.expander("‚òÅÔ∏è Databricks SQL (Lakehouse)"):
        st.markdown("""
        **Databricks SQL** - An√°lisis SQL sobre Data Lakehouse.
        
        **Caracter√≠sticas:**
        - Basado en Apache Spark
        - Delta Lake para ACID en Data Lake
        - Photon engine (motor vectorizado)
        - BI integrado (Databricks SQL)
        - Unity Catalog para governance
        
        **Casos de uso:**
        - Arquitectura Data Lakehouse
        - Empresas con Spark existente
        - ML + Analytics unificado
        """)

st.divider()

# --- Herramientas ETL/ELT ---
st.subheader("üîÑ Herramientas ETL/ELT")

tab1, tab2 = st.tabs(["üè¢ On-Premise", "‚òÅÔ∏è Cloud"])

with tab1:
    col1, col2 = st.columns(2)
    
    with col1:
        st.info("""
        **Informatica PowerCenter**
        - L√≠der hist√≥rico en ETL empresarial
        - GUI drag-and-drop
        - Conectores para 100+ fuentes
        - Data quality integrado
        - üí∞ Muy costoso
        """)
        
        st.success("""
        **Microsoft SSIS**
        - Incluido con SQL Server
        - Integraci√≥n con Visual Studio
        - Transformaciones visuales
        - üí≤ Econ√≥mico para clientes Microsoft
        """)
    
    with col2:
        st.warning("""
        **Talend**
        - Open source y versi√≥n enterprise
        - Generaci√≥n de c√≥digo Java
        - Big Data support
        - üí° Buena relaci√≥n calidad/precio
        """)
        
        st.info("""
        **Pentaho Data Integration (Kettle)**
        - Open source
        - GUI intuitivo (Spoon)
        - Comunidad activa
        - üÜì Gratuito (versi√≥n community)
        """)

with tab2:
    col1, col2 = st.columns(2)
    
    with col1:
        st.success("""
        **AWS Glue**
        - Serverless ETL
        - Basado en Spark
        - Data Catalog autom√°tico
        - Integraci√≥n con ecosistema AWS
        """)
        
        st.info("""
        **Azure Data Factory**
        - Servicio de integraci√≥n cloud
        - Pipelines visuales
        - Mapping Data Flows
        - Integraci√≥n con Synapse
        """)
    
    with col2:
        st.warning("""
        **Google Cloud Dataflow**
        - Basado en Apache Beam
        - Streaming y batch unificado
        - Escalado autom√°tico
        - Procesamiento distribuido
        """)
        
        st.success("""
        **Fivetran / Airbyte**
        - ELT moderno (cloud ‚Üí cloud)
        - Conectores pre-built
        - Replicaci√≥n autom√°tica
        - Low-code / No-code
        """)

st.divider()

# --- Herramientas BI ---
st.subheader("üìä Herramientas de Business Intelligence")

col1, col2, col3 = st.columns(3)

with col1:
    st.info("""
    **Tableau**
    - Visualizaciones interactivas
    - Drag-and-drop intuitivo
    - Gran comunidad
    - üí∞ $$$ (ahora Salesforce)
    """)
    
    st.success("""
    **Power BI**
    - Integraci√≥n Microsoft
    - DAX para c√°lculos
    - Excelente relaci√≥n calidad/precio
    - üí≤ $ - $$
    """)

with col2:
    st.warning("""
    **Looker**
    - Basado en LookML
    - Embedded analytics
    - Modelo sem√°ntico fuerte
    - üí∞ $$ (ahora Google)
    """)
    
    st.info("""
    **Qlik Sense**
    - Motor asociativo √∫nico
    - An√°lisis exploratorio
    - Self-service BI
    - üí∞ $$
    """)

with col3:
    st.success("""
    **Apache Superset**
    - Open source
    - Dashboards modernos
    - SQL Lab integrado
    - üÜì Gratuito
    """)
    
    st.warning("""
    **Metabase**
    - Open source
    - Simple y f√°cil de usar
    - Perfecto para startups
    - üÜì Gratuito
    """)

st.divider()

# --- Comparativa Cloud DWH ---
st.subheader("‚öñÔ∏è Comparativa Cloud Data Warehouses")

comparison_data = {
    "Caracter√≠stica": ["Serverless", "Multi-Cloud", "ML Integrado", "Pricing", "Escalabilidad", "Facilidad Uso"],
    "Redshift": ["Opcional", "‚ùå", "Limitado", "Por nodo", "‚≠ê‚≠ê‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê"],
    "BigQuery": ["‚úÖ", "‚ùå", "‚úÖ‚úÖ", "Por consulta", "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê"],
    "Snowflake": ["‚úÖ", "‚úÖ", "Via partners", "Compute+Storage", "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê‚≠ê"],
    "Synapse": ["Opcional", "‚ùå", "Limitado", "DWU/Serverless", "‚≠ê‚≠ê‚≠ê‚≠ê", "‚≠ê‚≠ê‚≠ê"]
}

st.table(comparison_data)

st.divider()

# --- Selecci√≥n de Herramientas ---
with st.expander("ü§î ¬øC√≥mo elegir la herramienta adecuada?"):
    st.markdown("""
    ### Criterios de Selecci√≥n
    
    **1. Presupuesto:**
    - üí∞üí∞üí∞ Enterprise: Oracle, Teradata, Informatica
    - üí∞üí∞ Medio: SQL Server, Snowflake, Tableau
    - üí∞ Econ√≥mico: BigQuery (pay-per-query), Power BI
    - üÜì Open Source: PostgreSQL, Pentaho, Superset
    
    **2. Volumen de Datos:**
    - < 1 TB: Cualquier soluci√≥n funciona
    - 1-10 TB: SQL Server, Redshift, BigQuery
    - 10-100 TB: Snowflake, BigQuery, Redshift
    - > 100 TB: BigQuery, Snowflake, Synapse con Spark
    
    **3. Experiencia del Equipo:**
    - Microsoft shop ‚Üí SQL Server, Power BI, Synapse
    - AWS shop ‚Üí Redshift, Glue, QuickSight
    - Google shop ‚Üí BigQuery, Dataflow, Looker Studio
    - Open source ‚Üí PostgreSQL, Pentaho, Superset
    
    **4. Casos de Uso:**
    - Analytics simple ‚Üí BigQuery serverless
    - Workloads variables ‚Üí Snowflake
    - ML integrado ‚Üí BigQuery ML
    - Multi-cloud ‚Üí Snowflake
    - Tiempo real ‚Üí Databricks, Synapse
    
    **5. Compliance y Seguridad:**
    - Datos muy sensibles ‚Üí On-premise (Oracle, SQL Server)
    - Regulaciones espec√≠ficas ‚Üí Verificar certificaciones cloud
    - Datos en EU ‚Üí Verificar GDPR compliance
    """)

st.divider()

# --- Arquitectura Moderna ---
st.subheader("üöÄ Stack Moderno Recomendado")

col1, col2 = st.columns(2)

with col1:
    st.success("""
    ### Stack Cloud-Native (Startup/Mediana)
    
    **Ingesta:**
    - Fivetran / Airbyte (ELT)
    
    **Storage:**
    - Snowflake o BigQuery
    
    **Transformaci√≥n:**
    - dbt (data build tool)
    
    **Orquestaci√≥n:**
    - Airflow / Prefect
    
    **BI:**
    - Looker / Metabase
    
    **üí° Ventajas:** Moderno, escalable, costo-efectivo
    """)

with col2:
    st.info("""
    ### Stack Enterprise (Gran Empresa)
    
    **Ingesta:**
    - Informatica / Talend
    
    **Storage:**
    - Snowflake / Synapse
    
    **Transformaci√≥n:**
    - DBT + Stored Procedures
    
    **Orquestaci√≥n:**
    - Control-M / Airflow
    
    **BI:**
    - Tableau / Power BI
    
    **üí° Ventajas:** Robusto, soporte enterprise, probado
    """)

st.divider()

